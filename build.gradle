buildscript {
    repositories {
        mavenCentral()
        maven {
            name "forge"
            url "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.0.+'
    }
}


apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

def mc_version = "1.16.5"
version = "${mc_version}-1"

version = '1.0.2-public'
group = 'modvault' // http://maven.apache.org/guides/mini/guide-naming-conventions.html

archivesBaseName = 'vault_research'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20200916-1.16.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            properties 'forge.logging.console.level': 'debug'
            properties 'fml.earlyprogresswindow': 'false'
            workingDirectory project.file('run')
            mods {
                vault_research {
                    source sourceSets.main
                }
            }
        }
        server {
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run')
            mods {
                vault_research {
                    source sourceSets.main
                }
            }
        }
    }
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-36.1.0"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "VaultResearch",
                "Specification-Vendor"    : "Iskallia",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "Iskallia",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
}


// Prevent Mixin annotation processor from getting into IDEA's annotation processor settings
// (from botania build.gradle)
if (System.getProperty("idea.sync.active") == "true") {
    afterEvaluate {
        tasks.withType(JavaCompile).all {
            it.options.annotationProcessorPath = files()
        }
    }
}

defaultTasks 'clean', 'build'